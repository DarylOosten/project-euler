package daryl.projecteuler.problems

import daryl.projecteuler.utilities.Fibonacci

/**
 * Even Fibonacci numbers
 * Problem 2
 *
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 *
 * @see <a href="http://projecteuler.net/problem=2">Project Euler</a>
 *
 * @author daryl
 */
object EvenFibonacciNumbers {

  def apply(max: Int): BigInt = {
    Fibonacci.evenFibonacci.takeWhile(f => f <= max).sum
  }
}